{"version":3,"sources":["components/layout/SignedInLink.js","store/actions/authAction.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/ProjectAction.js","App.js","serviceWorker.js","store/reducer/AuthReducer.js","store/reducer/ProjectReducer.js","store/reducer/RootReducer.js","config/fbConfig.js","index.js"],"names":["SignedInLink","className","to","onClick","this","props","signOut","profile","initials","Component","connect","dispatch","getState","getFirebase","auth","then","type","SignedOutLink","Navbar","links","uid","state","firebase","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","console","log","project","title","createdAt","calendar","ProjectList","projects","Dashboard","notification","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ProjectDetails","authorFirstName","authorLastName","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credential","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","userID","add","authorID","Date","App","exact","path","component","Boolean","window","location","hostname","initstate","AuthReducer","action","message","ProjectReducer","RootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"mSAOMA,E,uKAEE,OACI,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,kBAAZ,gBACJ,gCAAK,uBAAGC,QAASC,KAAKC,MAAMC,SAAvB,WAAL,KACA,4BAAI,kBAAC,IAAD,CAASJ,GAAG,IAAID,UAAU,8BAA8BG,KAAKC,MAAME,QAAQC,gB,GANpEC,aAkBXC,cAAQ,MANG,SAACC,GACxB,MAAM,CACFL,QAAU,kBAAMK,GCLd,SAACA,EAASC,EAAV,IACeC,EADsB,EAAjBA,eAGbC,OAAOR,UAAUS,MAAM,WACxBJ,EAAS,CAACK,KAAK,+BDKfN,CAAiCV,GEtB5BiB,E,uKAEb,OACI,wBAAIhB,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,e,GALuBO,aCGrCS,E,uKAEE,IACMC,EADOf,KAAKC,MAAMS,KACLM,IAAM,kBAAC,EAAD,CAAcb,QAAWH,KAAKC,MAAME,UAAa,kBAAC,EAAD,MAC1E,OACI,6BACI,yBAAKN,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,UAGCkB,S,GAXJV,aA2BNC,eARS,SAACW,GAErB,MAAM,CACFP,KAAOO,EAAMC,SAASR,KACtBP,QAAUc,EAAMC,SAASf,WAIlBG,CAAyBQ,G,iBC9BnBK,E,uKAGb,IAAMC,EAAgBpB,KAAKC,MAAMmB,cAGjC,OACG,yBAAKvB,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,gBACA,wBAAIA,UAAU,iBACRuB,GAAiBA,EAAcC,KAAI,SAAAC,GAChC,OACI,wBAAIC,IAAKD,EAAKE,IACV,0BAAM3B,UAAU,aACXyB,EAAKG,KADV,KAEA,8BAAQH,EAAKI,SACb,yBAAK7B,UAAU,uBACT8B,IAAOL,EAAKM,KAAKC,UAAUC,uB,GAnB/BzB,aCArB0B,E,uKAGb,OADAC,QAAQC,IAAIjC,KAAKC,MAAMiC,SAEnB,yBAAKrC,UAAU,kCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcG,KAAKC,MAAMiC,QAAQC,OACjD,+BAAKnC,KAAKC,MAAMiC,QAAQR,QAAxB,KACA,uBAAG7B,UAAU,aAAb,IAA2B8B,IAAO3B,KAAKC,MAAMiC,QAAQE,UAAUP,UAAUQ,WAAzE,W,GARwBhC,aCCvBiC,E,uKAEb,IAAMC,EAAWvC,KAAKC,MAAMsC,SAE5B,OACI,yBAAK1C,UAAU,wBAER0C,GAAYA,EAASlB,KAAI,SAAAa,GACrB,OACC,kBAAC,IAAD,CAAMpC,GAAI,YAAcoC,EAAQV,GAAKD,IAAKW,EAAQV,IAC9C,kBAAC,EAAD,CAAgBU,QAASA,a,GAVZ7B,a,gBCInCmC,E,uKAIC,OAAIxC,KAAKC,MAAMS,KAAKM,IAOf,yBAAKnB,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAc0C,SAAUvC,KAAKC,MAAMsC,YAEvC,yBAAK1C,UAAU,uBACX,kBAAC,EAAD,CAAcuB,cAAgBpB,KAAKC,MAAMwC,kBAXjD,kBAAC,IAAD,CAAU3C,GAAG,gB,GANLO,aAkCTqC,cACXC,2BAAiB,CACb,CAACC,WAAW,WAAWC,QAAQ,CAAC,YAAY,SAC5C,CAACD,WAAW,gBAAgBE,MAAM,EAAED,QAAQ,CAAC,OAAO,WACrDvC,aAbiB,SAACW,GACrB,MAAM,CACFsB,SAAUtB,EAAM8B,UAAUC,QAAQT,SAClC7B,KAAMO,EAAMC,SAASR,KACrB+B,aAAcxB,EAAM8B,UAAUC,QAAQ5B,kBAK/BsB,CAKTF,GCxCAS,E,uKAEE,OAAIjD,KAAKC,MAAMS,KAAKM,IAMhB,yBAAKnB,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,mBAA8CG,KAAKC,MAAMiC,QAAQC,OACjE,2BAAInC,KAAKC,MAAMiC,QAAQR,UAE3B,yBAAK7B,UAAU,wCACX,0CAAgBG,KAAKC,MAAMiC,QAAQgB,gBAAiBlD,KAAKC,MAAMiC,QAAQiB,eAAvE,KACA,6BAAMxB,IAAO3B,KAAKC,MAAMiC,QAAQE,UAAUP,UAAUQ,eAZ5D,kBAAC,IAAD,CAAUvC,GAAG,gB,GAJAO,aAkCdqC,cACXpC,aAXoB,SAACW,EAAOmC,GAC5B,IAAM5B,EAAK4B,EAASC,MAAMC,OAAO9B,GAC3Be,EAAWtB,EAAM8B,UAAUQ,KAAKhB,SAEtC,MAAM,CACFL,QAFYK,EAAWA,EAASf,GAAM,KAGtCd,KAAKO,EAAMC,SAASR,SAMxBiC,4BAAkB,iBAAM,CAAC,eAFdD,CAGZO,G,QCxCGO,E,4MACJvC,MAAQ,CACNwC,MAAO,GACPC,SAAU,I,EAEZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOtC,GAAKoC,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKhE,MAAMiE,OAAO,EAAKjD,Q,uDAEf,IAEDkD,EAAanE,KAAKC,MAAlBkE,UAEP,OACE,yBAAKtE,UAAU,aACb,0BAAMA,UAAU,QAAQuE,SAAUpE,KAAKgE,cACrC,wBAAInE,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOwE,QAAQ,SAAf,SACA,2BAAOzD,KAAK,QAAQY,GAAG,QAAQ8C,SAAUtE,KAAK2D,gBAEhD,yBAAK9D,UAAU,eACb,2BAAOwE,QAAQ,YAAf,YACA,2BAAOzD,KAAK,WAAWY,GAAG,WAAW8C,SAAUtE,KAAK2D,gBAEtD,yBAAK9D,UAAU,eACb,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBAEXsE,EAAY,2BAAIA,GAAiB,a,GAlC5B9D,aAyDNC,eAZS,SAACW,GACvB,MAAM,CACJkD,UAAYlD,EAAMP,KAAKyD,cAIA,SAAC5D,GAC1B,MAAM,CACF2D,OAAQ,SAACK,GAAD,OAAWhE,GRzDDiE,EQyDiBD,ERxD/B,SAAChE,EAAUC,EAAX,IACeC,EADwB,EAAjBA,eAGfC,OAAO+D,2BACZD,EAAWf,MACXe,EAAWd,UACb/C,KACEJ,EAAS,CAACK,KAAK,mBACjB8D,OAAM,SAACC,GACLpE,EAAS,CAACK,KAAK,sBAVJ,IAAC4D,MQ6DTlE,CAA4CkD,GCxDrDoB,E,4MACJ3D,MAAQ,CACNwC,MAAO,GACPC,SAAU,GACVmB,UAAU,GACVC,SAAS,I,EAEXnB,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOtC,GAAKoC,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKhE,MAAM8E,OAAO,EAAK9D,Q,uDAKvB,OAAGjB,KAAKC,MAAMS,KAAKM,IACV,kBAAC,IAAD,CAAUlB,GAAG,MAGpB,yBAAKD,UAAU,aACb,0BAAMA,UAAU,QAAQuE,SAAUpE,KAAKgE,cACrC,wBAAInE,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAOwE,QAAQ,SAAf,SACA,2BAAOzD,KAAK,QAAQY,GAAG,QAAQ8C,SAAUtE,KAAK2D,gBAEhD,yBAAK9D,UAAU,eACb,2BAAOwE,QAAQ,YAAf,YACA,2BAAOzD,KAAK,WAAWY,GAAG,WAAW8C,SAAUtE,KAAK2D,gBAGtD,yBAAK9D,UAAU,eACb,2BAAOwE,QAAQ,SAAf,cACA,2BAAOzD,KAAK,OAAOY,GAAG,YAAY8C,SAAUtE,KAAK2D,gBAEnD,yBAAK9D,UAAU,eACb,2BAAOwE,QAAQ,SAAf,aACA,2BAAOzD,KAAK,OAAOY,GAAG,WAAW8C,SAAUtE,KAAK2D,gBAElD,yBAAK9D,UAAU,eACb,4BAAQA,UAAU,gCAAlB,iB,GA5CSQ,aAiENC,eAZS,SAACW,GACvB,MAAM,CACJP,KAAMO,EAAMC,SAASR,SAIE,SAACH,GAC1B,MAAM,CACJwE,OAAQ,SAACC,GAAD,OAAazE,ETxCH,SAACyE,GACnB,OAAM,SAACzE,EAASC,EAAV,GAAmD,IAA/BC,EAA8B,EAA9BA,YAAYwE,EAAkB,EAAlBA,aAC5B/D,EAAWT,IACXsC,EAAYkC,IAElB/D,EAASR,OAAOwE,+BACZF,EAAQvB,MACRuB,EAAQtB,UACV/C,MAAK,SAACwE,GAEJ,OAAOpC,EAAUH,WAAW,SAASwC,IAAID,EAAK1D,KAAKT,KAAKqE,IAAI,CACxDR,UAAYG,EAAQH,UACpBC,SAAWE,EAAQF,SACnB1E,SAAS4E,EAAQH,UAAU,GAAGG,EAAQF,SAAS,QAEpDnE,MAAM,WACLJ,EAAU,CAACK,KAAK,sBACjB8D,OAAO,SAACC,GACPpE,EAAS,CAACK,KAAK,eAAe+D,YSsBRI,CAAOC,QAI1B1E,CAA4CsE,G,QCjErDU,E,4MAEFrE,MAAQ,CACJkB,MAAO,GACPT,QAAS,I,EAEXiC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOtC,GAAKoC,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKhE,MAAMsF,cAAc,EAAKtE,OAC9B,EAAKhB,MAAMuF,QAAQC,KAAK,M,uDAK1B,OAAIzF,KAAKC,MAAMS,KAAKM,IAOd,yBAAKnB,UAAU,aACX,0BAAMA,UAAU,QAAQuE,SAAUpE,KAAKgE,cACvC,wBAAInE,UAAU,2BAAd,kBACA,yBAAKA,UAAU,eACX,2BAAOwE,QAAQ,SAAf,SACA,2BAAOzD,KAAK,OAAOY,GAAG,QAAQ8C,SAAUtE,KAAK2D,gBAEjD,yBAAK9D,UAAU,eACX,2BAAOwE,QAAQ,WAAf,WACA,2BAAOzD,KAAK,OAAOY,GAAG,UAAU8C,SAAUtE,KAAK2D,gBAEnD,yBAAK9D,UAAU,eACX,4BAAQA,UAAU,gCAAlB,aAjBV,kBAAC,IAAD,CAAUC,GAAG,gB,GArBKO,aA0DbC,eAZS,SAACW,GACvB,MAAM,CACJP,KAAKO,EAAMC,SAASR,SAIG,SAACH,GAC1B,MAAO,CACLgF,cAAgB,SAACrD,GAAa3B,EC3DL,SAAC2B,GAC1B,OAAQ,SAAC3B,EAAWC,EAAZ,GAAyD,EAAhCC,YAAiC,IACxDsC,GAAYkC,EAD2C,EAAnBA,gBAEpC9E,EAAUK,IAAWU,SAASf,QAC9BuF,EAASlF,IAAWU,SAASR,KAAKM,IAExC+B,EAAUH,WAAW,YAAY+C,IAAjC,eACOzD,EADP,CAEIgB,gBAAgB/C,EAAQ0E,UACxB1B,eAAgBhD,EAAQ2E,SACxBc,SAASF,EACTtD,UAAY,IAAIyD,QACjBlF,MAAM,WACLJ,EAAS,CACLK,KAAK,iBACLsB,QAAUA,OAEdwC,OAAO,SAACC,GACRpE,EAAS,CAAEK,KAAK,uBAAwB+D,IAAIA,QDyCbY,CAAcrD,QAI1C5B,CAA4CgF,GEnC5CQ,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKjG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,IAAIC,UAAWzD,IACjC,kBAAC,IAAD,CAAOwD,KAAK,eAAeC,UAAWhD,IACtC,kBAAC,IAAD,CAAO+C,KAAK,UAAUC,UAAWzC,IACjC,kBAAC,IAAD,CAAOwC,KAAK,UAAUC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,iBAAiBC,UAAWX,QCRhCY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShD,MACvB,2DClBN,IAAMiD,EAAY,GAuCHC,EArCK,WAAgC,IAA/BtF,EAA8B,uDAAtBqF,EAAWE,EAAW,uCAE/C,OAAOA,EAAO5F,MACV,IAAK,cAED,OADAoB,QAAQC,IAAI,gBACL,eACAhB,EADP,CAEIkD,UAAY,iBAEpB,IAAK,gBAED,OADAnC,QAAQC,IAAI,aACL,eACAhB,EADP,CAEIkD,UAAY,OAEpB,IAAK,mBAED,OADAnC,QAAQC,IAAI,cACN,CACFhB,SAER,IAAK,iBAED,OADAe,QAAQC,IAAI,mBACL,eACAhB,EADP,CAEIkD,UAAW,OAEnB,IAAK,eAED,OADAnC,QAAQC,IAAI,eAAeuE,EAAO7B,IAAI8B,SACtC,eACOxF,EADP,CAEIkD,UAAWqC,EAAO7B,IAAI8B,UAE9B,QACI,OAAOxF,ICjCbqF,EAAY,CACdpE,QAAU,CACN,CAACV,GAAI,EAAGW,MAAO,UAAWT,QAAS,aACnC,CAACF,GAAI,EAAGW,MAAO,UAAWT,QAAS,aACnC,CAACF,GAAI,EAAGW,MAAO,UAAWT,QAAS,eAkB5BgF,EAdQ,WAAgC,IAA/BzF,EAA8B,uDAAtBqF,EAAWE,EAAW,uCAElD,OAAOA,EAAO5F,MACV,IAAK,iBAED,OADAoB,QAAQC,IAAI,kBAAkBuE,EAAOtE,SAC9BjB,EACX,IAAK,qBAED,OADAe,QAAQC,IAAI,qBAAqBuE,EAAO7B,KACjC1D,EACX,QACI,OAAOA,I,QCJJ0F,EAPKC,YAAgB,CAClClG,KAAM6F,EACNrE,QAASwE,EACT3D,UAAW8D,mBACX3F,SAAS4F,oB,wCCEX5F,IAAS6F,cAVM,CACbC,OAAQ,0CACRC,WAAY,iDACZC,YAAa,wDACbC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjBrG,IAAS6B,YAAYyE,SAAS,CAAEC,uBAAuB,IAExCvG,QAAf,ECGMwG,EAAQC,YACZhB,EACAjE,YACIkF,YAAgBC,IAAMC,kBAAkB,CAAErH,0BAAawE,+BACvD8C,yBAAe7G,IAAU8G,KASzBC,EAAW,CACf/G,aACAgH,OAPgB,CAChBC,YAAa,QACbC,wBAAwB,GAMxB7H,SAAUmH,EAAMnH,SAChB8H,kDACAC,SAAU,WACVC,SAAU,YAGZ,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChB/H,EAAOgI,aAAY,SAAAzH,GAAK,OAAIA,EAAMC,SAASR,QACjD,OAAKiI,mBAASjI,GACP+H,EADqB,kDAI9BG,IAASC,OACP,kBAAC,IAAD,CAAUnB,MAAOA,GACb,kBAAC,6BAAgCO,EAC7B,kBAACO,EAAD,KACI,kBAAC,EAAD,SAIZM,SAASC,eAAe,SL0EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvI,MAAK,SAAAwI,GACJA,EAAaC,gBAEd1E,OAAM,SAAA2E,GACLrH,QAAQqH,MAAMA,EAAM5C,c","file":"static/js/main.e35ab2c7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\n\r\n\r\nclass SignedInLink extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/createproject\">New Project</NavLink></li>\r\n                <li> <a onClick={this.props.signOut}>Log Out</a> </li>\r\n                <li><NavLink to=\"/\" className=\"btn btn-floating lighten-1\">{this.props.profile.initials}</NavLink></li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default  connect(null,mapDispatchToProps)(SignedInLink)","export  const signIn = (credential) => {\r\n    return(dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credential.email,\r\n            credential.password\r\n        ).then(\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        ).catch((err) => {\r\n            dispatch({type:'LOGIN_ERROR'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const  signOut = () =>{\r\n    return(dispatch,getState,{getFirebase}) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut().then( ()=>{\r\n                dispatch({type:'SIGN_OUT_SUCCESS'})\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) =>{\r\n    return(dispatch,getState,{getFirebase,getFirestore}) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            //console.log(resp.user.u.)\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName : newUser.firstName,\r\n                lastName : newUser.lastName,\r\n                initials:newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then( () => {\r\n            dispatch( {type:'SIGNUP_SUCCESS'} )\r\n        }).catch( (err) => {\r\n            dispatch({type:'SIGNUP_ERROR',err})\r\n        } )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default class SignedOutLink extends Component {\r\n    render() {\r\n        return (\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/signup\">SignUp</NavLink></li>\r\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLink from './SignedInLink'\r\nimport SignedOutLink from './SignedOutLink'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        const auth = this.props.auth\r\n        const links = auth.uid ? <SignedInLink profile = {this.props.profile}/> : <SignedOutLink />\r\n        return (\r\n            <div>\r\n                <nav className=\"nav-wrapper grey darken-3\">\r\n                    <div className=\"container\">\r\n                        <Link to=\"/\" className=\"brand-logo\">\r\n                            AKSHAY\r\n                        </Link>\r\n                        {links}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatrToProps = (state) =>{\r\n    //console.log(state)\r\n    return{\r\n        auth : state.firebase.auth,\r\n        profile : state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStatrToProps)(Navbar)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default class Notification extends Component {\r\n    render() {\r\n        \r\n        const notifications = this.props.notifications\r\n        \r\n        \r\n        return (\r\n           <div className=\"section\">\r\n               <div className=\"card z-depth-0\">\r\n                   <div className=\"card-content\">\r\n                       <span className=\"card-title\">Notification</span>\r\n                       <ul className=\"notifications\">\r\n                            {notifications && notifications.map(item => {\r\n                                return(\r\n                                    <li key={item.id}>\r\n                                        <span className=\"pink-text\">\r\n                                            {item.user} </span>\r\n                                        <span>{ item.content}</span>\r\n                                        <div className=\"grey-text note-date\">\r\n                                            { moment(item.time.toDate()).fromNow() }\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                       </ul>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default class ProjectSummary extends Component {\r\n    render() {\r\n        console.log(this.props.project)\r\n        return (\r\n            <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{this.props.project.title}</span>\r\n                    <p> {this.props.project.content } </p>\r\n                    <p className=\"grey-text\"> {moment(this.props.project.createdAt.toDate()).calendar()} </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ProjectList extends Component {\r\n    render() {\r\n        const projects = this.props.projects\r\n        //console.log(projects)\r\n        return (\r\n            <div className=\"project-list section\">\r\n               {\r\n                   projects && projects.map(project => {\r\n                       return(\r\n                        <Link to={'/project/' + project.id } key={project.id}>\r\n                            <ProjectSummary project={project} />\r\n                        </Link>\r\n                       )\r\n                   })\r\n               }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport Notification from './Notification'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport {compose} from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n       // console.log(this.props.projects)\r\n       \r\n       if(!this.props.auth.uid){\r\n            return (\r\n                <Redirect to=\"/signin\" />   \r\n            )\r\n       }\r\n       \r\n       return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList  projects={this.props.projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-1\">\r\n                        <Notification notifications ={this.props.notification}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notification: state.firestore.ordered.notifications\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([\r\n        {collection:'projects',orderBy:['createdAt','desc']},\r\n        {collection:'notifications',limit:3,orderBy:['time','desc']}\r\n    ]),connect(mapStateToProps)\r\n    )(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nclass ProjectDetails extends Component {\r\n    render() {\r\n        if(!this.props.auth.uid){\r\n            return(\r\n                <Redirect to=\"/signin\" />\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">Project Title - {this.props.project.title}</span>\r\n                        <p>{this.props.project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {this.props.project.authorFirstName}{this.props.project.authorLastName} </div>\r\n                        <div>{moment(this.props.project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        project : project ,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect( () => ['projects'] )\r\n) (ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    \r\n    const {authError} = this.props\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {\r\n                authError ? <p>{authError}</p> : null\r\n              }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError : state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return{\r\n      signIn: (creds) => dispatch(signIn(creds ))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName:'',\r\n    lastName:''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state)\r\n    // console.log(this.state);\r\n  }\r\n  render() {\r\n\r\n    if(this.props.auth.uid){\r\n      return(<Redirect to=\"/\" />)\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">First name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n    )\r\n  }  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/ProjectAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    \r\n    state = {\r\n        title: '',\r\n        content: ''\r\n      }\r\n      handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value\r\n        })\r\n      }\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n      }\r\n    \r\n    render() {\r\n      \r\n      if(!this.props.auth.uid){\r\n        return(\r\n          <Redirect to=\"/signin\"/>\r\n        )\r\n      }\r\n      \r\n      return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <input type=\"text\" id='content' onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return({\r\n    createProject : (project) => {dispatch(createProject(project))}\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return( (dispatch , getState , { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore()\r\n        const profile = getState().firebase.profile\r\n        const userID = getState().firebase.auth.uid\r\n        \r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName :profile.lastName,\r\n            authorID:userID,\r\n            createdAt : new Date()\r\n        }).then( () => {\r\n            dispatch({\r\n                type:'CREATE_PROJECT',\r\n                project : project\r\n            })\r\n        } ).catch( (err) => {\r\n            dispatch({ type:'CREATE_PROJECT_ERROR', err:err })\r\n        } )\r\n        \r\n\r\n    })\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n            <Route exact path=\"/\" component={Dashboard} /> \n            <Route path=\"/project/:id\" component={ProjectDetails} /> \n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/createproject\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initstate = {}\r\n\r\nconst AuthReducer = (state = initstate, action) => {\r\n    \r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login failed')\r\n            return {\r\n                ...state,\r\n                authError : 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"Logged in\")\r\n            return {\r\n                ...state,\r\n                authError : null\r\n            }\r\n        case 'SIGN_OUT_SUCCESS':\r\n            console.log('signed out')\r\n            return{\r\n                state\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('SIgn up success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('SIgnup error',action.err.message)\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import { Redirect } from \"react-router-dom\"\r\n\r\nconst initstate = {\r\n    project : [\r\n        {id: 1, title: 'Title 1', content: 'Content 1'},\r\n        {id: 2, title: 'Title 2', content: 'Content 2'},\r\n        {id: 3, title: 'Title 3', content: 'Content 3'},\r\n    ]\r\n}\r\n\r\nconst ProjectReducer = (state = initstate, action) => {\r\n    \r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Project created',action.project)\r\n            return state\r\n        case 'CREATE_PROJECT_ERR':\r\n            console.log('create project err',action.err)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ProjectReducer","import AuthReducer from './AuthReducer'\r\nimport ProjectReducer from './ProjectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\n\r\n\r\nconst RootReducer = combineReducers({\r\n  auth: AuthReducer,\r\n  project: ProjectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase:firebaseReducer \r\n});\r\n\r\nexport default RootReducer\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Replace this with your own config details\r\nconst config = {\r\n  apiKey: \"AIzaSyC5Dn7zejGrPBEeu7jRec9b_hzgY6NtiSE\",\r\n  authDomain: \"project-management-syste-3815a.firebaseapp.com\",\r\n  databaseURL: \"https://project-management-syste-3815a.firebaseio.com\",\r\n  projectId: \"project-management-syste-3815a\",\r\n  storageBucket: \"project-management-syste-3815a.appspot.com\",\r\n  messagingSenderId: \"913082840213\",\r\n  appId: \"1:913082840213:web:1bb3fee5f11dcf1b26d79c\",\r\n  measurementId: \"G-633ZMJBJXD\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase \r\n\r\n ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport  RootReducer  from \"./store/reducer/RootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\n\nconst store = createStore(\n  RootReducer, \n  compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebase, fbConfig),\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  presence: 'presence',\n  sessions: 'sessions'\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n  return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n      <ReactReduxFirebaseProvider { ...rrfProps }>\n          <AuthIsLoaded>\n              <App />\n          </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n  </Provider>, \n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}